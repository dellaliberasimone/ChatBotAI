name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  AZURE_CONTAINER_REGISTRY: acrdemopn.azurecr.io
  CONTAINER_NAME: swagger-minimal-api
  RESOURCE_GROUP: scaling-aks-demo-rg
  CLUSTER_NAME: aks-minimal-api
  DEPLOYMENT_MANIFEST_PATH: k8s-deployment.yaml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
        
    - name: Build and test
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        dotnet test --no-build --verbosity normal

    # Create new builder instance
    - name: Create and bootstrap Docker Buildx builder
      run: |
        docker buildx create --name mybuilder --use --bootstrap
        docker buildx inspect --bootstrap
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        buildkitd-flags: --debug
        driver: docker-container
        builder: mybuilder
        
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        builder: mybuilder
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        
    - name: Set up kubeconfig
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        
    - name: Deploy to AKS
      uses: azure/k8s-deploy@v4
      with:
        manifests: |
          ${{ env.DEPLOYMENT_MANIFEST_PATH }}
        images: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.sha }}
        namespace: default